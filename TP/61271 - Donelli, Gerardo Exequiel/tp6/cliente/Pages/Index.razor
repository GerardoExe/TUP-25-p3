@page "/"

@inject ProductosService ProductosService 
@inject PageTitleService PageTitleService 
@inject CarritoService CarritoService

@implements IDisposable

<div class="container py-4">
    <div class="row">
        @if (productos == null)
        {
            <div class="col-12 text-center py-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
            </div>
        }
        else if (!productos.Any())
        {
            <div class="col-12">
                <div class="alert alert-info">
                    No se encontraron productos @(!string.IsNullOrEmpty(textoBusqueda) ? $"para \"{textoBusqueda}\"" : "")
                </div>
            </div>
        }
        else
        {
            @foreach (var producto in productos)
            {
                <div class="col-12 col-sm-6 col-lg-4 col-xl-3 mb-4">
                    <TarjetaProducto Producto="producto" />
                </div>
            }
        }
    </div>
</div>

@code {
    private List<ProductoDTO> productos;
    private string textoBusqueda = "";

    [CascadingParameter]
    public MainLayout Layout { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "buscar")]
    public string? Buscar { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PageTitleService.Title = "CatÃ¡logo - Tienda Online";
        productos = await ProductosService.ObtenerProductosAsync();

           await CarritoService.InicializarAsync();

        CarritoService.OnChange += StateHasChanged;
        CarritoService.OnStockActualizar += ActualizarStock;
    }

    protected override async Task OnParametersSetAsync()
    {
        await BuscarProductos(Buscar ?? "");
    }

    private async Task BuscarProductos(string texto)
    {
        textoBusqueda = texto;
        productos = await ProductosService.ObtenerProductosAsync(texto);
    }

    private void ActualizarStock(int productoId, int diferencia)
    {
        var producto = productos.FirstOrDefault(p => p.Id == productoId);
        if (producto != null)
        {
            producto.Stock += diferencia;
            if (producto.Stock < 0) producto.Stock = 0;
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        CarritoService.OnChange -= StateHasChanged;
        CarritoService.OnStockActualizar -= ActualizarStock;
    }
}
